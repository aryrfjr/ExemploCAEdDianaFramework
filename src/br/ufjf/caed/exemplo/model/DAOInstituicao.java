package br.ufjf.caed.exemplo.model;

import java.util.Collection;
import java.util.Iterator;
import org.hibernate.Query;
import org.hibernate.HibernateException;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.type.Type;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

/**
 *
 * Spring DAO Support implementation for Instituicao.
 * Generated by Diana Framework. DO NOT EDIT!!!
 *
 */
public class DAOInstituicao extends HibernateDaoSupport {
    private final String DOMAIN_CLASS = "br.ufjf.caed.exemplo.model.Instituicao";

    public Collection getAll() {
        return getHibernateTemplate().find("from "+DOMAIN_CLASS+" as o");
    }
    public Collection query(final String consulta) {
        return (Collection)getHibernateTemplate().find(consulta);
    }
    public Object get(final int id) {
        return getHibernateTemplate().get(Instituicao.class, new Integer(id));
    }
    public Object get(final long id) {
        return getHibernateTemplate().load(Instituicao.class, new Long(id));
    }
    public Object get(final Integer id) {
        return getHibernateTemplate().load(Instituicao.class, id);
    }
    public Object get(final Long id) {
        return getHibernateTemplate().load(Instituicao.class, id);
    }
    public void deleteAll() {
        getHibernateTemplate().delete("from "+DOMAIN_CLASS+" as o");
    }
    public void delete(final int id) {
        getHibernateTemplate().delete(getHibernateTemplate().load(Instituicao.class, new Integer(id)));
    }
    public void delete(final long id) {
        getHibernateTemplate().delete(getHibernateTemplate().load(Instituicao.class, new Long(id)));
    }
    public void delete(final Integer id) {
        getHibernateTemplate().delete(getHibernateTemplate().load(Instituicao.class, id));
    }
    public void delete(final Long id) {
        getHibernateTemplate().delete(getHibernateTemplate().load(Instituicao.class, id));
    }
    public void delete(final Object objeto) {
        getHibernateTemplate().delete(objeto);
    }
    public void delete(final String consulta) {
        getHibernateTemplate().delete(consulta);
    }

    public void save(final Object objeto) {
        getHibernateTemplate().save(objeto);
    }
    public void update(final Object objeto) {
        getHibernateTemplate().update(objeto);
    }
    public void setORMReference(Object mp) {}
}